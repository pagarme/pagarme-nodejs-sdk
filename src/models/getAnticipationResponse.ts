/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  nullable,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  GetRecipientResponse,
  getRecipientResponseSchema,
} from './getRecipientResponse';

/** Anticipation */
export interface GetAnticipationResponse {
  /** Id */
  id?: string | null;
  /** Requested amount */
  requestedAmount?: number | null;
  /** Approved amount */
  approvedAmount?: number | null;
  /** Recipient */
  recipient?: GetRecipientResponse | null;
  /** Anticipation id on the gateway */
  pgid?: string | null;
  /** Creation date */
  createdAt?: string | null;
  /** Last update date */
  updatedAt?: string | null;
  /** Payment date */
  paymentDate?: string | null;
  /** Status */
  status?: string | null;
  /** Timeframe */
  timeframe?: string | null;
}

export const getAnticipationResponseSchema: Schema<GetAnticipationResponse> = object(
  {
    id: ['id', optional(nullable(string()))],
    requestedAmount: ['requested_amount', optional(nullable(number()))],
    approvedAmount: ['approved_amount', optional(nullable(number()))],
    recipient: [
      'recipient',
      optional(nullable(lazy(() => getRecipientResponseSchema))),
    ],
    pgid: ['pgid', optional(nullable(string()))],
    createdAt: ['created_at', optional(nullable(string()))],
    updatedAt: ['updated_at', optional(nullable(string()))],
    paymentDate: ['payment_date', optional(nullable(string()))],
    status: ['status', optional(nullable(string()))],
    timeframe: ['timeframe', optional(nullable(string()))],
  }
);
