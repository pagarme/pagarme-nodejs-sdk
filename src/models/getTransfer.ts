/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { dict, lazy, number, object, optional, Schema, string } from '../schema';
import {
  GetTransferSourceResponse,
  getTransferSourceResponseSchema,
} from './getTransferSourceResponse';
import {
  GetTransferTargetResponse,
  getTransferTargetResponseSchema,
} from './getTransferTargetResponse';

export interface GetTransfer {
  id: string;
  gatewayId: string;
  amount: number;
  status: string;
  createdAt: string;
  updatedAt: string;
  metadata?: Record<string, string>;
  fee?: number;
  fundingDate?: string;
  fundingEstimatedDate?: string;
  type: string;
  source: GetTransferSourceResponse;
  target: GetTransferTargetResponse;
}

export const getTransferSchema: Schema<GetTransfer> = object({
  id: ['id', string()],
  gatewayId: ['gateway_id', string()],
  amount: ['amount', number()],
  status: ['status', string()],
  createdAt: ['created_at', string()],
  updatedAt: ['updated_at', string()],
  metadata: ['metadata', optional(dict(string()))],
  fee: ['fee', optional(number())],
  fundingDate: ['funding_date', optional(string())],
  fundingEstimatedDate: ['funding_estimated_date', optional(string())],
  type: ['type', string()],
  source: ['source', lazy(() => getTransferSourceResponseSchema)],
  target: ['target', lazy(() => getTransferTargetResponseSchema)],
});
